{"version":3,"file":"github.js","sources":["../src/github.ts"],"sourcesContent":["import { Octokit } from '@octokit/rest'\nimport { context } from '@actions/github'\nimport * as core from '@actions/core'\nimport { ReleaseContext, PackageChanges } from './types.js'\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport * as toml from '@iarna/toml'\n\nexport class GitHubService {\n  private octokit: Octokit\n  private releaseContext: ReleaseContext\n\n  constructor(token: string) {\n    this.octokit = new Octokit({ auth: token })\n    this.releaseContext = this.getReleaseContext()\n  }\n\n  private getReleaseContext(): ReleaseContext {\n    const { payload, ref, repo } = context\n    const isPullRequest = payload.pull_request !== undefined\n    const pullRequestNumber = isPullRequest\n      ? payload.pull_request?.number\n      : undefined\n    const baseRef = isPullRequest ? payload.pull_request?.base.ref : ref\n    const headRef = isPullRequest ? payload.pull_request?.head.ref : ref\n\n    return {\n      isPullRequest,\n      isPreRelease: false, // Will be set by the action\n      shouldRelease: false, // Will be set by the action\n      pullRequestNumber,\n      baseRef,\n      headRef,\n      owner: repo.owner,\n      repo: repo.repo\n    }\n  }\n\n  async getPullRequestLabels(): Promise<string[]> {\n    if (\n      !this.releaseContext.isPullRequest ||\n      !this.releaseContext.pullRequestNumber\n    ) {\n      return []\n    }\n\n    const { data: pr } = await this.octokit.pulls.get({\n      owner: this.releaseContext.owner,\n      repo: this.releaseContext.repo,\n      pull_number: this.releaseContext.pullRequestNumber\n    })\n\n    return pr.labels.map((label) => label.name)\n  }\n\n  async createReleasePullRequest(changes: PackageChanges[]): Promise<void> {\n    if (\n      !this.releaseContext.isPullRequest ||\n      !this.releaseContext.pullRequestNumber\n    ) {\n      return\n    }\n\n    const title = `Release ${changes.map((change) => `${change.path}@${change.newVersion}`).join(', ')}`\n    const body = this.generatePullRequestBody(changes)\n\n    await this.octokit.pulls.update({\n      owner: this.releaseContext.owner,\n      repo: this.releaseContext.repo,\n      pull_number: this.releaseContext.pullRequestNumber,\n      title,\n      body\n    })\n\n    await this.octokit.issues.addLabels({\n      owner: this.releaseContext.owner,\n      repo: this.releaseContext.repo,\n      issue_number: this.releaseContext.pullRequestNumber,\n      labels: ['release-me']\n    })\n  }\n\n  private generatePullRequestBody(changes: PackageChanges[]): string {\n    return changes\n      .map((change) => {\n        return `## ${change.path} (${change.currentVersion} -> ${change.newVersion})\\n\\n${change.changelog}`\n      })\n      .join('\\n\\n')\n  }\n\n  async createRelease(changes: PackageChanges[]): Promise<void> {\n    // Set outputs based on number of packages\n    if (changes.length === 1) {\n      const change = changes[0]\n      core.setOutput('version', change.newVersion)\n      core.setOutput('prerelease', change.newVersion.includes('-rc.'))\n    } else {\n      const versions = changes.map((change) => ({\n        path: change.path,\n        version: change.newVersion,\n        prerelease: change.newVersion.includes('-rc.')\n      }))\n      core.setOutput('versions', JSON.stringify(versions))\n    }\n\n    for (const change of changes) {\n      const tagName = `${change.path}-v${change.newVersion}`\n      const releaseName = `${change.path} v${change.newVersion}`\n\n      // Create tag\n      await this.octokit.git.createRef({\n        owner: this.releaseContext.owner,\n        repo: this.releaseContext.repo,\n        ref: `refs/tags/${tagName}`,\n        sha: context.sha\n      })\n\n      // Create release\n      await this.octokit.repos.createRelease({\n        owner: this.releaseContext.owner,\n        repo: this.releaseContext.repo,\n        tag_name: tagName,\n        name: releaseName,\n        body: change.changelog,\n        draft: false,\n        prerelease: change.newVersion.includes('-rc.')\n      })\n    }\n  }\n\n  async getCommitsSinceLastRelease(packagePath: string): Promise<string[]> {\n    core.info(`Getting commits since last release for ${packagePath}...`)\n\n    // Get all releases for the repository\n    const { data: releases } = await this.octokit.repos.listReleases({\n      owner: this.releaseContext.owner,\n      repo: this.releaseContext.repo\n    })\n\n    // Find the last release for this package\n    const packageTagPrefix = `${packagePath}-v`\n    const lastRelease = releases.find(\n      (release) =>\n        release.tag_name.startsWith(packageTagPrefix) && !release.prerelease\n    )\n\n    // If no release found, get all commits since the beginning\n    const base = lastRelease ? lastRelease.tag_name : 'HEAD~1000' // Look back 1000 commits if no release found\n\n    const { data: commits } = await this.octokit.repos.compareCommits({\n      owner: this.releaseContext.owner,\n      repo: this.releaseContext.repo,\n      base,\n      head: this.releaseContext.headRef\n    })\n\n    return commits.commits\n      .filter((commit) => {\n        // Check if any files in the commit are within the package path\n        return commit.files?.some((file) =>\n          file.filename.startsWith(packagePath)\n        )\n      })\n      .map((commit) => commit.commit.message)\n  }\n\n  async updatePackageVersion(\n    packagePath: string,\n    newVersion: string\n  ): Promise<void> {\n    const packageJsonPath = path.join(packagePath, 'package.json')\n    const cargoTomlPath = path.join(packagePath, 'Cargo.toml')\n    const versionTxtPath = path.join(packagePath, 'version.txt')\n\n    if (fs.existsSync(packageJsonPath)) {\n      const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf-8'))\n      packageJson.version = newVersion\n      fs.writeFileSync(\n        packageJsonPath,\n        JSON.stringify(packageJson, null, 2) + '\\n'\n      )\n    } else if (fs.existsSync(cargoTomlPath)) {\n      const cargoToml = toml.parse(fs.readFileSync(cargoTomlPath, 'utf-8'))\n      if (cargoToml.package) {\n        ;(cargoToml.package as unknown as { version: string }).version =\n          newVersion\n        fs.writeFileSync(cargoTomlPath, toml.stringify(cargoToml))\n      }\n    } else if (fs.existsSync(versionTxtPath)) {\n      // For version.txt, we just write the version number directly\n      fs.writeFileSync(versionTxtPath, newVersion + '\\n')\n    } else {\n      throw new Error(\n        `No package.json, Cargo.toml, or version.txt found in ${packagePath}`\n      )\n    }\n  }\n}\n"],"names":[],"mappings":"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"}